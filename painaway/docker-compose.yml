services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_network
    restart: unless-stopped
  
  db:
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    restart: unless-stopped
    
  web:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend_network
    restart: unless-stopped

  celery:
    build: .
    command: celery -A painaway worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - web
      - redis
    networks:
      - backend_network
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A painaway beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - redis
    networks:
      - backend_network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  backend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24